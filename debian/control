Source: boost1.82
Homepage: https://www.boost.org/
Section: libs
Priority: optional
Maintainer: Ceph Developers <dev@ceph.io>
Build-Depends: debhelper-compat (= 12), dpkg-dev (>= 1.16.1~), dctrl-tools, chrpath,
 zlib1g-dev, libbz2-dev, liblzma-dev, libzstd-dev, libicu-dev (>= 63.1), mpi-default-dev,
 bison, flex, docbook-to-man, help2man, xsltproc, doxygen,
 dh-python,
 g++ (>= 4:5-0),
 python3, python3-all-dev (>= 3.1), python3-numpy
Build-Depends-Indep: graphviz
Build-Conflicts: libopenmpi-dev (= 1.3.2-2)
X-Python3-Version: >= 3.6
Vcs-Browser: https://salsa.debian.org/debian/boost
Vcs-Git: https://salsa.debian.org/debian/boost.git
Standards-Version: 4.6.2

Package: ceph-libboost1.82-dev
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends}, ${shlibs:Depends}, libstdc++-${gxx:major}-dev
Suggests: ceph-libboost1.82-doc,
 ceph-libboost-atomic1.82-dev,
 ceph-libboost-chrono1.82-dev,
 ceph-libboost-container1.82-dev,
 ceph-libboost-context1.82-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
 ceph-libboost-contract1.82-dev,
 ceph-libboost-coroutine1.82-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
 ceph-libboost-date-time1.82-dev,
 ceph-libboost-exception1.82-dev,
 ceph-libboost-fiber1.82-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
 ceph-libboost-filesystem1.82-dev,
 ceph-libboost-graph1.82-dev,
 ceph-libboost-graph-parallel1.82-dev,
 ceph-libboost-iostreams1.82-dev,
 ceph-libboost-locale1.82-dev,
 ceph-libboost-log1.82-dev,
 ceph-libboost-math1.82-dev,
 ceph-libboost-mpi1.82-dev,
 ceph-libboost-mpi-python1.82-dev,
 ceph-libboost-numpy1.82-dev,
 ceph-libboost-program-options1.82-dev,
 ceph-libboost-python1.82-dev,
 ceph-libboost-random1.82-dev,
 ceph-libboost-regex1.82-dev,
 ceph-libboost-serialization1.82-dev,
 ceph-libboost-stacktrace1.82-dev,
 ceph-libboost-system1.82-dev,
 ceph-libboost-test1.82-dev,
 ceph-libboost-thread1.82-dev,
 ceph-libboost-timer1.82-dev,
 ceph-libboost-type-erasure1.82-dev,
 ceph-libboost-wave1.82-dev,
 ceph-libboost1.82-tools-dev,
 libmpfrc++-dev, libntl-dev,
 ceph-libboost-nowide1.82-dev
Description: Boost C++ Libraries development files
 The Boost web site provides free, peer-reviewed, portable C++ source
 libraries. The emphasis is on libraries which work well with the C++
 Standard Library. One goal is to establish "existing practice" and
 provide reference implementations so that the Boost libraries are
 suitable for eventual standardization. Some of the libraries have
 already been proposed for inclusion in the C++ Standards Committee's
 upcoming C++ Standard Library Technical Report.
 .
 This package provides headers for all Boost libraries.
 .
 Extended precision arithmetic package libmpfrc++-dev or libntl-dev is
 required to use the Boost.Multiprecision wrapping of the respective
 library.

Package: ceph-libboost1.82-tools-dev
Architecture: any
Multi-Arch: foreign
Section: libdevel
Depends: ${misc:Depends}, ${shlibs:Depends}
Suggests: xsltproc,
 doxygen,
 docbook-xml (>= 4.2),
 docbook-xsl (>= 1.82.2),
 default-jdk (>= 1.4),
 fop (>= 0.94)
Description: Boost C++ Libraries development tools
 The Boost web site provides free, peer-reviewed, portable C++ source
 libraries. The emphasis is on libraries which work well with the C++
 Standard Library. One goal is to establish "existing practice" and
 provide reference implementations so that the Boost libraries are
 suitable for eventual standardization. Some of the libraries have
 already been proposed for inclusion in the C++ Standards Committee's
 upcoming C++ Standard Library Technical Report.
 .
 This package provides the auxiliary tools bjam, Boost.Build, bcp,
 inspect, boostbook and quickbook.

Package: ceph-libboost1.82-all-dev
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev,
 ceph-libboost1.82-tools-dev,
 ceph-libboost-atomic1.82-dev,
 ceph-libboost-chrono1.82-dev,
 ceph-libboost-container1.82-dev,
 ceph-libboost-context1.82-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
 ceph-libboost-coroutine1.82-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
 ceph-libboost-date-time1.82-dev,
 ceph-libboost-exception1.82-dev,
 ceph-libboost-fiber1.82-dev [i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x],
 ceph-libboost-filesystem1.82-dev,
 ceph-libboost-graph1.82-dev,
 ceph-libboost-graph-parallel1.82-dev,
 ceph-libboost-iostreams1.82-dev,
 ceph-libboost-locale1.82-dev,
 ceph-libboost-log1.82-dev,
 ceph-libboost-math1.82-dev,
 ceph-libboost-mpi1.82-dev,
 ceph-libboost-mpi-python1.82-dev,
 ceph-libboost-numpy1.82-dev,
 ceph-libboost-program-options1.82-dev,
 ceph-libboost-python1.82-dev,
 ceph-libboost-random1.82-dev,
 ceph-libboost-regex1.82-dev,
 ceph-libboost-serialization1.82-dev,
 ceph-libboost-stacktrace1.82-dev,
 ceph-libboost-system1.82-dev,
 ceph-libboost-test1.82-dev,
 ceph-libboost-thread1.82-dev,
 ceph-libboost-timer1.82-dev,
 ceph-libboost-type-erasure1.82-dev,
 ceph-libboost-wave1.82-dev,
 ceph-libboost-nowide1.82-dev
Description: Boost C++ Libraries development files (ALL)
 The Boost web site provides free, peer-reviewed, portable C++ source
 libraries. The emphasis is on libraries which work well with the C++
 Standard Library. One goal is to establish "existing practice" and
 provide reference implementations so that the Boost libraries are
 suitable for eventual standardization. Some of the libraries have
 already been proposed for inclusion in the C++ Standards Committee's
 upcoming C++ Standard Library Technical Report.
 .
 This metapackage provides the complete Boost development environment,
 including all separately-packaged libraries.

Package: ceph-libboost1.82-doc
Homepage: http://www.boost.org/libs/
Architecture: all
Section: doc
Depends: ${misc:Depends}, libjs-mathjax
Suggests: ceph-libboost1.82-dev (>= ${source:Version})
Description: Boost.org libraries documentation placeholder
 This package originally provided documentation, but has since fallen
 into disrepair and presently provides no documentation.  Please
 use documentation at www.boost.org.

Package: ceph-libboost-atomic1.82.0
Homepage: http://www.boost.org/libs/atomic/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: atomic data types, operations, and memory ordering constraints
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Atomic is a library that provides atomic data types and
 operations on these data types, as well as memory ordering
 constraints required for coordinating multiple threads through atomic
 variables. It implements the interface as defined by the C++11
 standard, but makes this feature available for platforms lacking
 system/compiler support for this particular C++11 feature.
 .
 Users of this library should already be familiar with concurrency in
 general, as well as elementary concepts such as "mutual exclusion".
 .
 The implementation makes use of processor-specific instructions where
 possible (via inline assembler, platform libraries or compiler
 intrinsics), and falls back to "emulating" atomic operations through
 locking.

Package: ceph-libboost-atomic1.82-dev
Homepage: http://www.boost.org/libs/atomic/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-atomic1.82.0 (= ${binary:Version})
Description: atomic data types, operations, and memory ordering constraints
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Atomic is a library that provides atomic data types and
 operations on these data types, as well as memory ordering
 constraints required for coordinating multiple threads through atomic
 variables. It implements the interface as defined by the C++11
 standard, but makes this feature available for platforms lacking
 system/compiler support for this particular C++11 feature.
 .
 Users of this library should already be familiar with concurrency in
 general, as well as elementary concepts such as "mutual exclusion".
 .
 The implementation makes use of processor-specific instructions where
 possible (via inline assembler, platform libraries or compiler
 intrinsics), and falls back to "emulating" atomic operations through
 locking.

Package: ceph-libboost-chrono1.82.0
Homepage: http://www.boost.org/libs/chrono/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C++ representation of time duration, time point, and clocks
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost.Chrono library provides:
 .
  * A means to represent time durations: managed by the generic duration
    class.Examples of time durations include days, minutes, seconds and
    nanoseconds, which can be represented with a fixed number of clock
    ticks per unit. All of these units of time duration are united with
    a generic interface by the duration facility.
  * A type for representing points in time: time_point. A time_point
    represents an epoch plus or minus a duration. The library leaves
    epochs unspecified. A time_point is associated with a clock.
  * Several clocks, some of which may not be available on a particular
    platform: system_clock, steady_clock and high_resolution_clock. A
    clock is a pairing of a time_point and duration, and a function
    which returns a time_point representing now.
 .
 To make the timing facilities more generally useful, Boost.Chrono
 provides a number of clocks that are thin wrappers around the
 operating system's time APIs, thereby allowing the extraction of wall
 clock time, user CPU time, system CPU time spent by the process:
 .
  * process_real_cpu_clock, captures wall clock CPU time spent by the
    current process.
  * process_user_cpu_clock, captures user-CPU time spent by the current
    process.
  * process_system_cpu_clock, captures system-CPU time spent by the
    current process.
  * a tuple-like class process_cpu_clock, that captures real, user-CPU,
    and system-CPU process times together.
  * a thread_clock thread steady clock giving the time spent by the
    current thread (when supported by a platform).
 .
 Lastly, Boost.Chrono includes typeof registration for duration and
 time_point to permit using emulated auto with C++03 compilers.

Package: ceph-libboost-chrono1.82-dev
Homepage: http://www.boost.org/libs/chrono/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-chrono1.82.0 (= ${binary:Version})
Description: C++ representation of time duration, time point, and clocks
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost.Chrono library provides:
 .
  * A means to represent time durations: managed by the generic
 duration class . Examples of time durations include days, minutes,
 seconds and nanoseconds, which can be represented with a fixed number
 of clock ticks per unit. All of these units of time duration are
 united with a generic interface by the duration facility.
  * A type for representing points in time: time_point. A time_point
 represents an epoch plus or minus a duration. The library leaves
 epochs unspecified. A time_point is associated with a clock.
  * Several clocks, some of which may not be available on a
 particular platform: system_clock, steady_clock and
 high_resolution_clock. A clock is a pairing of a time_point and
 duration, and a function which returns a time_point representing now.
 .
 To make the timing facilities more generally useful, Boost.Chrono
 provides a number of clocks that are thin wrappers around the
 operating system's time APIs, thereby allowing the extraction of wall
 clock time, user CPU time, system CPU time spent by the process:
 .
  * process_real_cpu_clock, captures wall clock CPU time spent by the
 current process.
  * process_user_cpu_clock, captures user-CPU time
 spent by the current process.
  * process_system_cpu_clock, captures
 system-CPU time spent by the current process.
  * A tuple-like class
 process_cpu_clock, that captures real, user-CPU, and system-CPU
 process times together.
  * A thread_clock thread steady clock giving
 the time spent by the current thread (when supported by a platform).
 .
 Lastly, Boost.Chrono includes typeof registration for duration and
 time_point to permit using emulated auto with C++03 compilers.

Package: ceph-libboost-container1.82.0
Homepage: http://boost.org/libs/container/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C++ library that implements several well-known containers
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Container library implements several well-known containers,
 including STL containers. The aim of the library is to offers
 advanced features not present in standard containers or to offer the
 latest standard draft features for compilers that don't comply with
 the latest C++ standard.
 .
 In short, what does Boost.Container offer?
 .
  * Move semantics are implemented, including move emulation
    for pre-C++11 compilers.
  * New advanced features (e.g. placement insertion,
    recursive containers) are present.
  * Containers support stateful allocators and are compatible with
    Boost.Interprocess (they can be safely placed in shared memory).
  * The library offers new useful containers:
    * flat_map, flat_set, flat_multimap and flat_multiset: drop-in
      replacements for standard associative containers but more
      memory friendly and with faster searches.
    * stable_vector: a std::list and std::vector hybrid container:
      vector-like random-access iterators and list-like iterator
      stability in insertions and erasures.
    * slist: the classic pre-standard singly linked list implementation
      offering constant-time size(). Note that C++11 forward_list has no size().

Package: ceph-libboost-container1.82-dev
Homepage: http://boost.org/libs/container/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-container1.82.0 (= ${binary:Version})
Description: C++ library that implements several well-known containers - dev files
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Container library implements several well-known containers,
 including STL containers. The aim of the library is to offers
 advanced features not present in standard containers or to offer the
 latest standard draft features for compilers that don't comply with
 the latest C++ standard.
 .
 In short, what does Boost.Container offer?
 .
  * Move semantics are implemented, including move emulation
    for pre-C++11 compilers.
  * New advanced features (e.g. placement insertion,
    recursive containers) are present.
  * Containers support stateful allocators and are compatible with
    Boost.Interprocess (they can be safely placed in shared memory).
  * The library offers new useful containers:
    * flat_map, flat_set, flat_multimap and flat_multiset: drop-in
      replacements for standard associative containers but more
      memory friendly and with faster searches.
    * stable_vector: a std::list and std::vector hybrid container:
      vector-like random-access iterators and list-like iterator
      stability in insertions and erasures.
    * slist: the classic pre-standard singly linked list implementation
      offering constant-time size(). Note that C++11 forward_list has no size().

Package: ceph-libboost-context1.82.0
Homepage: http://www.boost.org/libs/context/
Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: provides a sort of cooperative multitasking on a single thread
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Context is a foundational library that provides a sort of
 cooperative multitasking on a single thread. By providing an
 abstraction of the current execution state in the current thread,
 including the stack (with local variables) and stack pointer, all
 registers and CPU flags, and the instruction pointer, a fcontext_t
 instance represents a specific point in the application's execution
 path. This is useful for building higher-level abstractions, like
 coroutines, cooperative threads (userland threads) or an equivalent
 to C# keyword yield in C++.

Package: ceph-libboost-context1.82-dev
Homepage: http://www.boost.org/libs/context/
Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-thread1.82-dev (= ${binary:Version}),
 ceph-libboost-context1.82.0 (= ${binary:Version})
Description: provides a sort of cooperative multitasking on a single thread
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Context is a foundational library that provides a sort of
 cooperative multitasking on a single thread. By providing an
 abstraction of the current execution state in the current thread,
 including the stack (with local variables) and stack pointer, all
 registers and CPU flags, and the instruction pointer, a fcontext_t
 instance represents a specific point in the application's execution
 path. This is useful for building higher-level abstractions, like
 coroutines, cooperative threads (userland threads) or an equivalent
 to C# keyword yield in C++.

Package: ceph-libboost-contract1.82.0
Homepage: http://boost.org/libs/contract/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: Contract library for C++
 This package forms part of the Boost C++ Libraries collection.
 .
 All contract programming features are supported: Subcontracting,
 class invariants, postconditions (with old and return values),
 preconditions, customizable actions on assertion failure (e.g.,
 terminate or throw), optional compilation and checking of assertions,
 etc.

Package: ceph-libboost-contract1.82-dev
Homepage: http://boost.org/libs/contract/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-contract1.82.0 (= ${binary:Version})
Description: Contract library for C++ - dev files
 This package forms part of the Boost C++ Libraries collection.
 .
 All contract programming features are supported: Subcontracting,
 class invariants, postconditions (with old and return values),
 preconditions, customizable actions on assertion failure (e.g.,
 terminate or throw), optional compilation and checking of assertions,
 etc.

Package: ceph-libboost-coroutine1.82.0
Homepage: http://www.boost.org/libs/coroutine/
Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: provides a sort of cooperative multitasking on a single thread
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Coroutine provides templates for generalized subroutines which
 allow multiple entry points for suspending and resuming execution at
 certain locations. It preserves the local state of execution and
 allows re-entering subroutines more than once (useful if state must
 be kept across function calls).
 .
 Coroutines can be viewed as a language-level construct providing a
 special kind of control flow.
 .
 In contrast to threads, which are pre-emptive, coroutine switches are
 cooperative (programmer controls when a switch will happen). The
 kernel is not involved in the coroutine switches.
 .
 The implementation uses Boost.Context for context switching.

Package: ceph-libboost-coroutine1.82-dev
Homepage: http://www.boost.org/libs/coroutine/
Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-context1.82-dev (= ${binary:Version}),
 ceph-libboost-coroutine1.82.0 (= ${binary:Version})
Description: provides a sort of cooperative multitasking on a single thread
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Coroutine provides templates for generalized subroutines which
 allow multiple entry points for suspending and resuming execution at
 certain locations. It preserves the local state of execution and
 allows re-entering subroutines more than once (useful if state must
 be kept across function calls).
 .
 Coroutines can be viewed as a language-level construct providing a
 special kind of control flow.
 .
 In contrast to threads, which are pre-emptive, coroutine switches are
 cooperative (programmer controls when a switch will happen). The
 kernel is not involved in the coroutine switches.
 .
 The implementation uses Boost.Context for context switching.

Package: ceph-libboost-date-time1.82.0
Homepage: http://www.boost.org/libs/date_time/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: set of date-time libraries based on generic programming concepts
 This package forms part of the Boost C++ Libraries collection.
 .
 These libraries are intended to make programming with dates and times
 almost as simple and natural as programming with strings and integers.

Package: ceph-libboost-date-time1.82-dev
Homepage: http://www.boost.org/libs/date_time/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-date-time1.82.0 (= ${binary:Version}),
 ceph-libboost-serialization1.82-dev (= ${binary:Version})
Description: set of date-time libraries based on generic programming concepts
 This package forms part of the Boost C++ Libraries collection.
 .
 These libraries are intended to make programming with dates and times
 almost as simple and natural as programming with strings and integers.

Package: ceph-libboost-exception1.82-dev
Homepage: http://www.boost.org/libs/exception/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version})
Description: library to help write exceptions and handlers
 This package forms part of the Boost C++ Libraries collection.
 .
 The purpose of Boost Exception is to ease the design of exception
 class hierarchies and to help write exception handling and error
 reporting code.

Package: ceph-libboost-fiber1.82.0
Homepage: http://www.boost.org/libs/fiber/
Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: cooperatively-scheduled micro-/userland-threads
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Fiber provides a framework for micro-/userland-threads (fibers)
 scheduled cooperatively.  The API contains classes and functions to
 manage and synchronize fibers similarly to standard thread support
 library.
 .
 Each fiber has its own stack.
 .
 A fiber can save the current execution state, including all registers
 and CPU flags, the instruction pointer, and the stack pointer and
 later restore this state. The idea is to have multiple execution
 paths running on a single thread using cooperative scheduling (versus
 threads, which are preemptively scheduled). The running fiber decides
 explicitly when it should yield to allow another fiber to run
 (context switching). Boost.Fiber internally uses execution_context
 from Boost.Context; the classes in this library manage, schedule and,
 when needed, synchronize those execution contexts. A context switch
 between threads usually costs thousands of CPU cycles on x86,
 compared to a fiber switch with less than a hundred cycles. A fiber
 runs on a single thread at any point in time.

Package: ceph-libboost-fiber1.82-dev
Homepage: http://www.boost.org/libs/fiber/
Architecture: i386 hurd-i386 kfreebsd-i386 amd64 kfreebsd-amd64 armel armhf arm64 mips mipsel mips64el powerpc ppc64el riscv64 s390x
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-context1.82-dev (= ${binary:Version}),
 ceph-libboost-filesystem1.82-dev (= ${binary:Version}),
 ceph-libboost-fiber1.82.0 (= ${binary:Version})
Description: cooperatively-scheduled micro-/userland-threads
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Fiber provides a framework for micro-/userland-threads (fibers)
 scheduled cooperatively.  The API contains classes and functions to
 manage and synchronize fibers similarly to standard thread support
 library.
 .
 Each fiber has its own stack.
 .
 A fiber can save the current execution state, including all registers
 and CPU flags, the instruction pointer, and the stack pointer and
 later restore this state. The idea is to have multiple execution
 paths running on a single thread using cooperative scheduling (versus
 threads, which are preemptively scheduled). The running fiber decides
 explicitly when it should yield to allow another fiber to run
 (context switching). Boost.Fiber internally uses execution_context
 from Boost.Context; the classes in this library manage, schedule and,
 when needed, synchronize those execution contexts. A context switch
 between threads usually costs thousands of CPU cycles on x86,
 compared to a fiber switch with less than a hundred cycles. A fiber
 runs on a single thread at any point in time.

Package: ceph-libboost-filesystem1.82.0
Homepage: http://boost.org/libs/filesystem/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: filesystem operations (portable paths, iteration over directories, etc) in C++
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost Filesystem Library provides portable facilities to query and
 manipulate paths, files, and directories.  The goal is to
 facilitate portable script-like operations from within C++ programs.

Package: ceph-libboost-filesystem1.82-dev
Homepage: http://boost.org/libs/filesystem/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-filesystem1.82.0 (= ${binary:Version}),
 ceph-libboost-system1.82-dev (= ${binary:Version})
Description: filesystem operations (portable paths, iteration over directories, etc) in C++
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost Filesystem Library provides portable facilities to query and
 manipulate paths, files, and directories.  The goal is to
 facilitate portable script-like operations from within C++ programs.

Package: ceph-libboost-graph1.82.0
Homepage: http://www.boost.org/libs/graph/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Suggests: graphviz
Description: generic graph components and algorithms in C++
 This package forms part of the Boost C++ Libraries collection.
 .
 Graphs are mathematical abstractions that are useful for solving
 many types of problems in computer science. Consequently, these
 abstractions must also be represented in computer programs. A
 standardized generic interface for traversing graphs is of utmost
 importance to encourage reuse of graph algorithms and data structures.

Package: ceph-libboost-graph1.82-dev
Homepage: http://www.boost.org/libs/graph/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-graph1.82.0 (= ${binary:Version}),
 ceph-libboost-regex1.82-dev (= ${binary:Version}),
 ceph-libboost-serialization1.82-dev (= ${binary:Version}),
 ceph-libboost-test1.82-dev (= ${binary:Version})
Description: generic graph components and algorithms in C++
 This package forms part of the Boost C++ Libraries collection.
 .
 Graphs are mathematical abstractions that are useful for solving
 many types of problems in computer science. Consequently, these
 abstractions must also be represented in computer programs. A
 standardized generic interface for traversing graphs is of utmost
 importance to encourage reuse of graph algorithms and data structures.

Package: ceph-libboost-graph-parallel1.82.0
Homepage: http://www.boost.org/libs/graph_parallel/
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Suggests: graphviz
Description: generic graph components and algorithms in C++
 This package forms part of the Boost C++ Libraries collection.
 .
 The Parallel Boost Graph Library is an extension to the Boost Graph Library
 (BGL) for parallel and distributed computing. It offers distributed graphs
 and graph algorithms to exploit coarse-grained parallelism along with
 parallel algorithms that exploit fine-grained parallelism, while retaining
 the same interfaces as the (sequential) BGL. Code written using the sequential
 BGL should be easy to parallelize with the parallel BGL.

Package: ceph-libboost-graph-parallel1.82-dev
Homepage: http://www.boost.org/libs/graph_parallel/
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-graph-parallel1.82.0 (= ${binary:Version}),
 ceph-libboost-serialization1.82-dev (= ${binary:Version}),
 ceph-libboost-test1.82-dev (= ${binary:Version})
Description: generic graph components and algorithms in C++
 This package forms part of the Boost C++ Libraries collection.
 .
 The Parallel Boost Graph Library is an extension to the Boost Graph Library
 (BGL) for parallel and distributed computing. It offers distributed graphs
 and graph algorithms to exploit coarse-grained parallelism along with
 parallel algorithms that exploit fine-grained parallelism, while retaining
 the same interfaces as the (sequential) BGL. Code written using the sequential
 BGL should be easy to parallelize with the parallel BGL.

Package: ceph-libboost-iostreams1.82.0
Homepage: http://www.boost.org/libs/iostreams/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: Boost.Iostreams Library
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Iostreams are a collection of concepts and a set of templates
 which turn models of these concepts into C++ standard library streams
 and stream buffers.

Package: ceph-libboost-iostreams1.82-dev
Homepage: http://www.boost.org/libs/iostreams/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-regex1.82-dev (= ${binary:Version}),
 ceph-libboost-iostreams1.82.0 (= ${binary:Version}),
 libbz2-dev, liblzma-dev, zlib1g-dev
Description: Boost.Iostreams Library development files
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Iostreams are a collection of concepts and a set of templates
 which turn models of these concepts into C++ standard library streams
 and stream buffers.

Package: ceph-libboost-locale1.82.0
Homepage: http://www.boost.org/libs/locale/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C++ facilities for localization
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Locale gives powerful tools for development of cross platform
 localized software - the software that talks to user in its language.
 .
  * Correct case conversion, case folding and normalization.
  * Collation (sorting), including support for 4 Unicode collation
 levels.
  * Date, time, timezone and calendar manipulations, formatting
 and parsing, including transparent support for calendars other than
 Gregorian.
  * Boundary analysis for characters, words, sentences and
 line-breaks.
  * Number formatting, spelling and parsing.
  * Monetary formatting and parsing.
  * Powerful message formatting (string translation) including
 support for plural forms, using GNU catalogs.
  * Character set conversion.
  * Transparent support for 8-bit character sets like Latin1
  * Support for char and wchar_t
  * Experimental support for C++0x char16_t and char32_t strings and streams.

Package: ceph-libboost-locale1.82-dev
Homepage: http://www.boost.org/libs/math/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-thread1.82-dev (= ${binary:Version}),
 ceph-libboost-locale1.82.0 (= ${binary:Version})
Description: C++ facilities for localization
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Locale gives powerful tools for development of cross platform
 localized software - the software that talks to user in its language.
 .
  * Correct case conversion, case folding and normalization.
  * Collation (sorting), including support for 4 Unicode collation
 levels.
  * Date, time, timezone and calendar manipulations, formatting
 and parsing, including transparent support for calendars other than
 Gregorian.
  * Boundary analysis for characters, words, sentences and
 line-breaks.
  * Number formatting, spelling and parsing.
  * Monetary formatting and parsing.
  * Powerful message formatting (string translation) including
 support for plural forms, using GNU catalogs.
  * Character set conversion.
  * Transparent support for 8-bit character sets like Latin1
  * Support for char and wchar_t
  * Experimental support for C++0x char16_t and char32_t strings and streams.

Package: ceph-libboost-log1.82.0
Homepage: http://www.boost.org/libs/log/
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Description: C++ logging library
 This package forms part of the Boost C++ Libraries collection.
 .
 This library aims to make logging significantly easier for the
 application developer. It provides a wide range of out-of-the-box
 tools along with public interfaces for extending the library. The
 main goals of the library are:
 .
  * Simplicity. A small example code snippet should be enough to get
 the feel of the library and be ready to use its basic features.
  * Extensibility. A user should be able to extend functionality of the
 library for collecting and storing information into logs.
  * Performance. The library should have as little performance impact on
 the user's application as possible.

Package: ceph-libboost-log1.82-dev
Homepage: http://www.boost.org/libs/log/
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost-log1.82.0 (= ${binary:Version}),
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-atomic1.82-dev (= ${binary:Version}),
 ceph-libboost-date-time1.82-dev (= ${binary:Version}),
 ceph-libboost-filesystem1.82-dev (= ${binary:Version}),
 ceph-libboost-system1.82-dev (= ${binary:Version}),
 ceph-libboost-regex1.82-dev (= ${binary:Version}),
 ceph-libboost-thread1.82-dev (= ${binary:Version})
Description: C++ logging library
 This package forms part of the Boost C++ Libraries collection.
 .
 This library aims to make logging significantly easier for the
 application developer. It provides a wide range of out-of-the-box
 tools along with public interfaces for extending the library. The
 main goals of the library are:
 .
  * Simplicity. A small example code snippet should be enough to get
 the feel of the library and be ready to use its basic features.
  * Extensibility. A user should be able to extend functionality of the
 library for collecting and storing information into logs.
  * Performance. The library should have as little performance impact on
 the user's application as possible.

Package: ceph-libboost-math1.82.0
Homepage: http://www.boost.org/libs/math/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: Boost.Math Library
 This package forms part of the Boost C++ Libraries collection.
 .
 This library is divided into three interconnected parts:
  * Statistical Distributions: Provides a reasonably comprehensive set of
    statistical distributions, upon which higher level statistical tests
    can be built.
  * Mathematical Special Functions: Provides a small number of high quality
    special functions, initially these were concentrated on functions used in
    statistical applications along with those in the Technical Report on
    C++ Library Extensions.
  * Implementation Toolkit: Provides many of the tools required to implement
    mathematical special functions.

Package: ceph-libboost-math1.82-dev
Homepage: http://www.boost.org/libs/math/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-math1.82.0 (= ${binary:Version})
Description: Boost.Math Library development files
 This package forms part of the Boost C++ Libraries collection.
 .
 This library is divided into three interconnected parts:
  * Statistical Distributions: Provides a reasonably comprehensive set of
    statistical distributions, upon which higher level statistical tests
    can be built.
  * Mathematical Special Functions: Provides a small number of high quality
    special functions, initially these were concentrated on functions used in
    statistical applications along with those in the Technical Report on
    C++ Library Extensions.
  * Implementation Toolkit: Provides many of the tools required to implement
    mathematical special functions.

Package: ceph-libboost-mpi1.82.0
Homepage: http://www.boost.org/doc/html/mpi.html
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C++ interface to the Message Passing Interface (MPI)
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost.MPI library provides a C++ interface to MPI that
 supports modern C++ development styles, including complete support for
 user-defined data types and C++ Standard Library types, arbitrary function
 objects for collective algorithms, and the use of modern C++ library
 techniques to maintain maximal efficiency.

Package: ceph-libboost-mpi1.82-dev
Homepage: http://www.boost.org/doc/html/mpi.html
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-serialization1.82-dev (= ${binary:Version}),
 ceph-libboost-mpi1.82.0 (= ${binary:Version}),
 mpi-default-dev
Suggests: ceph-libboost-graph1.82-dev
Description: C++ interface to the Message Passing Interface (MPI)
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost.MPI library provides a C++ interface to MPI that
 supports modern C++ development styles, including complete support for
 user-defined data types and C++ Standard Library types, arbitrary function
 objects for collective algorithms, and the use of modern C++ library
 techniques to maintain maximal efficiency.

Package: ceph-libboost-mpi-python1.82.0
Homepage: http://www.boost.org/doc/html/mpi/python.html
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, ${python3:Depends}, mpi-default-bin
Pre-Depends: ${misc:Pre-Depends}
Suggests: python3
Provides: ${boost:Provides}
Description: C++ interface to the Message Passing Interface (MPI), Python Bindings
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost.MPI library provides a C++ interface to MPI that
 supports modern C++ development styles, including complete support for
 user-defined data types and C++ Standard Library types, arbitrary function
 objects for collective algorithms, and the use of modern C++ library
 techniques to maintain maximal efficiency.
 .
 This package provides Python Bindings to the C++ interface.
 .
 One of the python interpreter packages is required to use the bindings.

Package: ceph-libboost-mpi-python1.82-dev
Homepage: http://www.boost.org/doc/html/mpi/python.html
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost-mpi1.82-dev (= ${binary:Version}),
 ceph-libboost-mpi-python1.82.0 (= ${binary:Version})
Description: C++ interface to the Message Passing Interface (MPI), Python Bindings
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost.MPI library provides a C++ interface to MPI that
 supports modern C++ development styles, including complete support for
 user-defined data types and C++ Standard Library types, arbitrary function
 objects for collective algorithms, and the use of modern C++ library
 techniques to maintain maximal efficiency.
 .
 This package provides Python Bindings to the C++ interface.

Package: ceph-libboost-nowide1.82.0
Homepage: http://www.boost.org/libs/python/
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Suggests: python3
Provides: ${boost:Provides}
Description: Standard library functions with UTF-8 API on Windows
 This package forms part of the Boost C++ Libraries collection.
 .
 The library provides an implementation of standard C and C++
 library functions which are UTF-8 aware on Windows without
 requiring to use the Wipe API.
 .
 On POSIX platforms, where UTF-8 is already commonly used, the
 calls in Nowide just alias to their standard counterparts.

Package: ceph-libboost-nowide1.82-dev
Homepage: http://www.boost.org/libs/python/
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost-nowide1.82.0 (= ${binary:Version})
Suggests: ceph-libboost1.82-doc
Description: Standard library functions with UTF-8 API on Windows development files
 This package forms part of the Boost C++ Libraries collection.
 .
 The library provides an implementation of standard C and C++
 library functions which are UTF-8 aware on Windows without
 requiring to use the Wipe API.
 .
 On POSIX platforms, where UTF-8 is already commonly used, the
 calls in Nowide just alias to their standard counterparts.

Package: ceph-libboost-numpy1.82.0
Homepage: http://www.boost.org/libs/python/
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Suggests: python3
Provides: ${boost:Provides}
Description: Boost.Python NumPy extensions
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost Python library enables exporting a C++ library to Python.
 The NumPy extensions lets the C++ code interact with NumPy types.
 .
 One of the python interpreter packages is required to use the
 created extensions.

Package: ceph-libboost-numpy1.82-dev
Homepage: http://www.boost.org/libs/python/
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost-numpy1.82.0 (= ${binary:Version})
Suggests: ceph-libboost1.82-doc
Description: Boost.Python NumPy extensions development files
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost Python library enables exporting a C++ library to Python.
 The NumPy extensions lets the C++ code interact with NumPy types.
 .
 This package allows development of a Python interface for all current
 versions of Python in Debian.  Code using this library will need also
 one of the Python development packages.

Package: ceph-libboost-program-options1.82.0
Homepage: http://www.boost.org/libs/program_options/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: program options library for C++
 This package forms part of the Boost C++ Libraries collection.
 .
 Library to let program developers obtain program options, that is
 (name, value) pairs from the user, via conventional methods such as
 command line and config file.

Package: ceph-libboost-program-options1.82-dev
Homepage: http://www.boost.org/libs/program_options/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-program-options1.82.0 (= ${binary:Version})
Description: program options library for C++
 This package forms part of the Boost C++ Libraries collection.
 .
 Library to let program developers obtain program options, that is
 (name, value) pairs from the user, via conventional methods such as
 command line and config file.

Package: ceph-libboost-python1.82.0
Homepage: http://www.boost.org/libs/python/
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, ${python3:Depends}
Pre-Depends: ${misc:Pre-Depends}
Suggests: python3
Breaks: ${python3:Breaks}
Provides: ${boost:Provides}
Description: Boost.Python Library
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost Python Library is used to quickly and easily export a C++
 library to Python such that the Python interface is very similar to
 the C++ interface. It is designed to be minimally intrusive on your
 C++ design. In most cases, you should not have to alter your C++
 classes in any way in order to use them with Boost.Python.  The
 system should simply "reflect" your C++ classes and functions into
 Python. The major features of Boost.Python include support for:
 Subclassing extension types in Python, Overriding virtual functions
 in Python, Member function Overloading, Automatic wrapping of
 numeric operators among others.
 .
 One of the python interpreter packages is required to use the
 created extensions.

Package: ceph-libboost-python1.82-dev
Homepage: http://www.boost.org/libs/python/
Architecture: any
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-python1.82.0 (= ${binary:Version}),
 python3-dev, ${python3:Depends},
Suggests: ceph-libboost1.82-doc, gccxml
Description: Boost.Python Library development files
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost Python Library is used to quickly and easily export a C++
 library to Python such that the Python interface is very similar to
 the C++ interface. It is designed to be minimally intrusive on your
 C++ design. In most cases, you should not have to alter your C++
 classes in any way in order to use them with Boost.Python.  The
 system should simply "reflect" your C++ classes and functions into
 Python. The major features of Boost.Python include support for:
 Subclassing extension types in Python, Overriding virtual functions
 in Python, Member function Overloading, Automatic wrapping of
 numeric operators among others.
 .
 This package allows development of a Python interface for all current
 versions of Python in Debian.  Code using this library will need also
 one of the Python development packages.
Conflicts: ceph-libboost-python1.67-dev
Replaces: ceph-libboost-python1.67-dev

Package: ceph-libboost-random1.82.0
Homepage: http://www.boost.org/libs/random/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: Boost Random Number Library
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost Random Number Library (Boost.Random for short) provides a
 variety of generators and distributions to produce random numbers
 having useful properties, such as uniform distribution.

Package: ceph-libboost-random1.82-dev
Homepage: http://www.boost.org/libs/random/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-system1.82-dev (= ${binary:Version}),
 ceph-libboost-random1.82.0 (= ${binary:Version})
Description: Boost Random Number Library
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost Random Number Library (Boost.Random for short) provides a
 variety of generators and distributions to produce random numbers
 having useful properties, such as uniform distribution.
Conflicts: ceph-libboost-random1.67-dev
Replaces: ceph-libboost-random1.67-dev

Package: ceph-libboost-regex1.82.0
Homepage: http://www.boost.org/libs/regex/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Provides: ${boost:Provides}
Description: regular expression library for C++
 This package forms part of the Boost C++ Libraries collection.
 .
 Regular expressions are a form of pattern-matching that are often
 used in text processing; many users will be familiar with the Unix
 utilities grep, sed and awk, and the programming language perl, each
 of which make extensive use of regular expressions. Traditionally C++
 users have been limited to the POSIX C APIs for manipulating regular
 expressions, and while regex does provide these APIs, they do not
 represent the best way to use the library. For example regex can cope
 with wide character strings, or search and replace operations (in a
 manner analogous to either sed or perl), something that traditional C
 libraries can not do.

Package: ceph-libboost-regex1.82-dev
Homepage: http://www.boost.org/libs/regex/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-regex1.82.0 (= ${binary:Version}),
 libicu-dev
Description: regular expression library for C++
 This package forms part of the Boost C++ Libraries collection.
 .
 Regular expressions are a form of pattern-matching that are often
 used in text processing; many users will be familiar with the Unix
 utilities grep, sed and awk, and the programming language perl, each
 of which make extensive use of regular expressions. Traditionally C++
 users have been limited to the POSIX C APIs for manipulating regular
 expressions, and while regex does provide these APIs, they do not
 represent the best way to use the library. For example regex can cope
 with wide character strings, or search and replace operations (in a
 manner analogous to either sed or perl), something that traditional C
 libraries can not do.
Conflicts: ceph-libboost-regex1.67-dev
Replaces: ceph-libboost-regex1.67-dev

Package: ceph-libboost-serialization1.82.0
Homepage: http://www.boost.org/libs/serialization/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: serialization library for C++
 This package forms part of the Boost C++ Libraries collection,
 containing the following functionalities:
 .
  * proper restoration of pointers to shared data
  * serialization of STL containers and other commonly used templates
  * data portability - streams of bytes created on one platform should
    be readable on any other
  * archive interface must be rich enough to permit the creation of an
    archive that presents serialized data as XML in a useful manner
 .
 Here, "serialization" means the reversible deconstruction of an
 arbitrary set of C++ data structures to a sequence of bytes.
 archive: to refer to a specific rendering of this stream of bytes.

Package: ceph-libboost-serialization1.82-dev
Homepage: http://www.boost.org/libs/serialization/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-serialization1.82.0 (= ${binary:Version})
Description: serialization library for C++
 This package forms part of the Boost C++ Libraries collection,
 containing the following functionalities:
 .
  * proper restoration of pointers to shared data
  * serialization of STL containers and other commonly used templates
  * data portability - streams of bytes created on one platform should
    be readable on any other
  * archive interface must be rich enough to permit the creation of an
    archive that presents serialized data as XML in a useful manner
 .
 Here, "serialization" means the reversible deconstruction of an
 arbitrary set of C++ data structures to a sequence of bytes.
 archive: to refer to a specific rendering of this stream of bytes.
Conflicts: ceph-libboost-serialization1.67-dev
Replaces: ceph-libboost-serialization1.67-dev

Package: ceph-libboost-stacktrace1.82.0
Homepage: http://boost.org/libs/stacktrace/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: library to capture and print stack traces
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Stacktrace library is a simple C++03 library that provides
 information about call sequence in a human-readable form.

Package: ceph-libboost-stacktrace1.82-dev
Homepage: http://boost.org/libs/stacktrace/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-stacktrace1.82.0 (= ${binary:Version})
Description: library to capture and print stack traces - development files
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Stacktrace library is a simple C++03 library that provides
 information about call sequence in a human-readable form.

Package: ceph-libboost-system1.82.0
Homepage: http://www.boost.org/libs/system/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: Operating system (e.g. diagnostics support) library
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost System library provides simple, light-weight error_code
 objects that encapsulate system-specific error code values, yet also
 provide access to more abstract and portable error conditions via
 error_condition objects. Because error_code objects can represent
 errors from sources other than the operating system, including
 user-defined sources, each error_code and error_condition has an
 associated error_category.

Package: ceph-libboost-system1.82-dev
Homepage: http://www.boost.org/libs/system/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-system1.82.0 (= ${binary:Version})
Description: Operating system (e.g. diagnostics support) library
 This package forms part of the Boost C++ Libraries collection.
 .
 The Boost System library provides simple, light-weight error_code
 objects that encapsulate system-specific error code values, yet also
 provide access to more abstract and portable error conditions via
 error_condition objects. Because error_code objects can represent
 errors from sources other than the operating system, including
 user-defined sources, each error_code and error_condition has an
 associated error_category.
Conflicts: ceph-libboost-system1.67-dev
Replaces: ceph-libboost-system1.67-dev

Package: ceph-libboost-test1.82.0
Homepage: http://www.boost.org/libs/test/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: components for writing and executing test suites
 This package forms part of the Boost C++ Libraries collection.  The
 library contains several components.
 .
  * Basic execution, error detection, and reporting facility.
  * Facilities to monitor program execution and produce error reports.
  * Unit test framework to simplify writing test cases.

Package: ceph-libboost-test1.82-dev
Homepage: http://www.boost.org/libs/test/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-test1.82.0 (= ${binary:Version})
Description: components for writing and executing test suites
 This package forms part of the Boost C++ Libraries collection.  The
 library contains several components.
 .
  * Basic execution, error detection, and reporting facility.
  * Facilities to monitor program execution and produce error reports.
  * Unit test framework to simplify writing test cases.
Conflicts: ceph-libboost-test1.67-dev
Replaces: ceph-libboost-test1.67-dev

Package: ceph-libboost-thread1.82.0
Homepage: http://www.boost.org/libs/thread/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: portable C++ multi-threading
 This package forms part of the Boost C++ Libraries collection.
 .
 Toolkit for writing C++ programs that execute as multiple,
 asynchronous, independent, threads-of-execution. Each thread has its
 own machine state including program instruction counter and
 registers.

Package: ceph-libboost-thread1.82-dev
Homepage: http://www.boost.org/libs/thread/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-atomic1.82-dev (= ${binary:Version}),
 ceph-libboost-chrono1.82-dev (= ${binary:Version}),
 ceph-libboost-date-time1.82-dev (= ${binary:Version}),
 ceph-libboost-system1.82-dev (= ${binary:Version}),
 ceph-libboost-thread1.82.0 (= ${binary:Version})
Description: portable C++ multi-threading
 This package forms part of the Boost C++ Libraries collection.
 .
 Toolkit for writing C++ programs that execute as multiple,
 asynchronous, independent, threads-of-execution. Each thread has its
 own machine state including program instruction counter and
 registers.
Conflicts: ceph-libboost-thread1.67-dev
Replaces: ceph-libboost-thread1.67-dev

Package: ceph-libboost-timer1.82.0
Homepage: http://www.boost.org/libs/timer/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C++ wall clock and CPU process timers
 This package forms part of the Boost C++ Libraries collection.
 .
 Portable C++ timer classes that answer the question "How long does my
 C++ code take to run?" with as little as one #include and one
 additional line of code.
 .
 Class cpu_timer measures wall clock time, user CPU process time, and
 system CPU process time. Class auto_cpu_timer is a refinement of
 cpu_timer that automatically reports the elapsed times when an
 auto_cpu_timer object is destroyed.

Package: ceph-libboost-timer1.82-dev
Homepage: http://www.boost.org/libs/timer/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-chrono1.82-dev (= ${binary:Version}),
 ceph-libboost-timer1.82.0 (= ${binary:Version})
Description: C++ wall clock and CPU process timers
 This package forms part of the Boost C++ Libraries collection.
 .
 Portable C++ timer classes that answer the question "How long does my
 C++ code take to run?" with as little as one #include and one
 additional line of code.
 .
 Class cpu_timer measures wall clock time, user CPU process time, and
 system CPU process time. Class auto_cpu_timer is a refinement of
 cpu_timer that automatically reports the elapsed times when an
 auto_cpu_timer object is destroyed.
Conflicts: ceph-libboost-timer1.67-dev
Replaces: ceph-libboost-timer1.67-dev

Package: ceph-libboost-type-erasure1.82.0
Homepage: http://www.boost.org/doc/libs/1_60_0/doc/html/boost_typeerasure.html
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C++ runtime polymorphism based on concepts
 This package forms part of the Boost C++ Libraries collection.
 .
 C++ has two distinct kinds of polymorphism, virtual functions and templates,
 each of which has its own advantages and disadvantages.  The Boost.TypeErasure
 library combines the superior abstraction capabilities of templates, with the
 runtime flexibility of virtual functions.

Package: ceph-libboost-type-erasure1.82-dev
Homepage: http://www.boost.org/doc/libs/1_60_0/doc/html/boost_typeerasure.html
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-system1.82-dev (= ${binary:Version}),
 ceph-libboost-thread1.82-dev (= ${binary:Version}),
 ceph-libboost-type-erasure1.82.0 (= ${binary:Version})
Description: C++ runtime polymorphism based on concepts
 This package forms part of the Boost C++ Libraries collection.
 .
 C++ has two distinct kinds of polymorphism, virtual functions and templates,
 each of which has its own advantages and disadvantages.  The Boost.TypeErasure
 library combines the superior abstraction capabilities of templates, with the
 runtime flexibility of virtual functions.

Package: ceph-libboost-wave1.82.0
Homepage: http://www.boost.org/libs/wave/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C99/C++ preprocessor library
 This package forms part of the Boost C++ Libraries collection.
 .
 The Wave C++ preprocessor library is a Standards conformant
 implementation of the mandated C99/C++ preprocessor functionality
 packed behind a simple to use interface, which integrates well with
 the well known idioms of the Standard Template Library (STL).

Package: ceph-libboost-wave1.82-dev
Homepage: http://www.boost.org/libs/wave/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-serialization1.82-dev (= ${binary:Version}),
 ceph-libboost-wave1.82.0 (= ${binary:Version}),
 ceph-libboost-filesystem1.82-dev (= ${binary:Version})
Description: C99/C++ preprocessor library
 This package forms part of the Boost C++ Libraries collection.
 .
 The Wave C++ preprocessor library is a Standards conformant
 implementation of the mandated C99/C++ preprocessor functionality
 packed behind a simple to use interface, which integrates well with
 the well known idioms of the Standard Template Library (STL).

Package: ceph-libboost-json1.82.0
Homepage: https://www.boost.org/doc/libs/release/libs/json/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C++ containers and algorithms that implement JSON
 This library focuses on a common and popular use-case: parsing
 and serializing to and from a container called value which holds
 JSON types.
 .
 Any value which you build can be serialized and then deserialized,
 guaranteeing that the result will be equal to the original value.
 Whatever JSON output you produce with this library will be readable
 by most common JSON implementations in any language.

Package: ceph-libboost-json1.82-dev
Homepage: https://www.boost.org/doc/libs/release/libs/json/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-container1.82-dev (= ${binary:Version}),
 ceph-libboost-system1.82-dev (= ${binary:Version})
Description: C++ containers and algorithms that implement JSON
 This library focuses on a common and popular use-case: parsing
 and serializing to and from a container called value which holds
 JSON types.
 .
 Any value which you build can be serialized and then deserialized,
 guaranteeing that the result will be equal to the original value.
 Whatever JSON output you produce with this library will be readable
 by most common JSON implementations in any language.

Package: ceph-libboost-url1.82.0
Homepage: https://www.boost.org/doc/libs/release/libs/url/
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: C++ library that implements "URL"
 C++ library which provides containers and algorithms which model a "URL,"
 the Uniform Resource Identifier (URI) specification (henceforth referred to
 as rfc3986).
 .
 A URL is a compact sequence of characters that identifies an abstract or
 physical resource.
 .
 This library understands the grammars related to URLs and provides
 functionality to validate, parse, examine, and modify urls, and apply
 normalization or resolution algorithms.

Package: ceph-libboost-url1.82-dev
Homepage: https://www.boost.org/doc/libs/release/libs/url/
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 ceph-libboost1.82-dev (= ${binary:Version}),
 ceph-libboost-system1.82-dev (= ${binary:Version}),
 ceph-libboost-url1.82.0 (= ${binary:Version})
Description: C++ library that implements "URL"
 C++ library which provides containers and algorithms which model a "URL,"
 the Uniform Resource Identifier (URI) specification (henceforth referred to
 as rfc3986).
 .
 A URL is a compact sequence of characters that identifies an abstract or
 physical resource.
 .
 This library understands the grammars related to URLs and provides
 functionality to validate, parse, examine, and modify urls, and apply
 normalization or resolution algorithms.
